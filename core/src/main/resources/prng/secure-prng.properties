# Should SHA1PRNG be over-ridden? Uncomment this line to over-ride it
# prng.SecureRandomProvider.replaceSHA1PRNG=Nist-SHA256
#
# Specify a strong algorithm
prng.SecureRandomProvider.strongAlgorithm=Nist-Hmac512

# Do we allow preferences for storing configuration? System preferences
# typically require administrator privileges to access so are only rarely
# available.
config.preferences.enable.user = true 
config.preferences.enable.system = false 

# The collector.[class-name] properties define which entropy collectors should
# be loaded at startup. The value is interpreted as a Boolean, where
# "true" means the class should be loaded and "false" means it should be
# ignored.
#
# The config.[class-name].* properties define configurable properties for
# the collectors.

collector.prng.collector.FinalizerEntropy=true
collector.prng.collector.FreeMemoryEntropy=true
collector.prng.collector.GarbageCollectorEntropy=true
collector.prng.collector.SchedulingEntropy=true
collector.prng.collector.ThreadTimeEntropy=true
collector.prng.collector.AWTEntropy=true
collector.prng.collector.HeapEntropy=true

# Each collector has a delay in milliseconds between collections. If entropy
# is not used, the delays will get longer reducing the load caused by
# collection.
config.prng.collector.FinalizerEntropy.delay=100
config.prng.collector.FreeMemoryEntropy.delay=100
config.prng.collector.GarbageCollectorEntropy.delay=10000
config.prng.collector.SchedulingEntropy.delay=50
config.prng.collector.ThreadTimeEntropy.delay=100
config.prng.collector.AWTEntropy.delay=2000
config.prng.collector.AWTEntropy.sampleWidth=50
config.prng.collector.AWTEntropy.sampleHeight=50
config.prng.collector.HeapEntropy.delay=100

# The time in milliseconds after which entropy collection starts slowing down
# to limit the amount of resources collection uses.
prng.collector.EntropyCollector.slowDownPeriod=5000


# Network random sources.
# Expected number of times an entropy batch will be used before it is deemed over-used.
network.expectedUsage=32

# Number of milliseconds to wait for a connection time out
network.connectionTimeout=120000

# Number of milliseconds to wait for a read time out
network.readTimeout=120000

# Number of seeds injected each run
network.seedsUsed=4

# Each source has a weighting which is a floating
# point number. The larger the weight the more often the source is called
# compared to the other sources. A source with a zero or negative weight
# will never be called.
network.source.prng.internet.HotBits=1.0
network.source.prng.internet.Quantum=1.0
network.source.prng.internet.RandomDotOrg=1.0

# The www.random.org API requires an API key
prng.internet.RandomDotOrg.apiKey=47247f14-dd13-422e-bddf-0ec46f4e7412

# The QRNG uses an invalid HTTPS certificate. Perhaps at some point they
# will fix that.
prng.internet.Quantum.useHTTPS=false

# Additive increase in the time between seed saves
config.prng.seeds.SeedStorage.savePeriodAdd = 5000

# Maximum milli-seconds between between seed saves
config.prng.seeds.SeedStorage.savePeriodMax = 86400000

# Multiplicative increase in the time between seed saves
config.prng.seeds.SeedStorage.savePeriodMultiplier = 1

# How often is seed information stored?
config.prng.seeds.SeedStorage.savePeriod = 5000

# Seeds are stored using this implementation
config.prng.seeds.SeedStorage.class = prng.seeds.UserPrefsStorage
config.prng.seeds.FileStorage.file = {user.dir}/seeds.db
